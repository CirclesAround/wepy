<style lang="less">

</style>

<template>
  <view class="page">
    <head></head>
    <button @tap="startRecord">{{isStart === 0 ? '点击开始录音' : isStart === 1 ? '正在录音' : isStart === 2 ? '暂停录音' : isStart === 3 ? '继续录音' : '录音完成'}}</button>
    <button @tap="playRecording" v-show="isStart === 4">播放录音</button>
    <view class="body-view">
      <slider @change="changeVolume" :value="sliderValue" show-value/>
    </view>
  </view>

</template>

<script>
  import wepy from '@wepy/core'

  wepy.page({
    data: {
      recorderManager: '', // 创建录音
      innerAudioContext: '', // 创建音频
      isStart: 0, // 0没有开始录音，1开始录音，2暂停录音，3继续录音，4录音完成
      option: {
        duration: 30000,
        frameSize: 50
      },
      isRecordingPlay: false,
      recordingAddress: '', // 录音地址
      musicUrl: '', // 线上的背景音乐地址下载到本地
      setVolume: 0.2, // 设置背景音乐的音量
      sliderValue: 20
    },
    methods: {
      startRecord () {
        let that = this
        wx.downloadFile({
          url: 'https://img-qiniuyun-abzdev.xy22.cn/upload/music/library/audio/2021/02/02/202102026018cdb81b90e1612238263111.mp3',
          success (res) {
            // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
            if (res.statusCode === 200) {
              that.musicUrl = res.tempFilePath
            }
          }
        })
        if (that.isStart === 1) {
          that.recorderManager.pause()
        } else {
          wx.getSetting({
            success (res) { // 已授权
              if (res.authSetting['scope.record']) {
                that.isStart = 1
                that.recorderManager.start(that.option)
              } else { // 未授权
                wx.authorize({
                  scope: 'scope.record',
                  success: res => { // 授权成功
                    console.log(res)
                  },
                  fail: error => { // 拒绝授权
                    wx.showModal({
                      title: '温馨提示',
                      content: `若点击不授权，将无法使用录音`,
                      cancelText: '不授权',
                      cancelColor: '#999',
                      confirmText: '授权',
                      confirmColor: '#00c6ff',
                      success(res) {
                        if (res.confirm) {
                          wx.openSetting({ // 确定再次授权
                            success(res) {
                              console.log(res.authSetting)
                              that.startRecord()
                            }
                          })
                        } else if (res.cancel) {
                          console.log('用户点击取消')
                        }
                      }
                    })
                  }
                })
              }
            }
          })
        }
      },
      playRecording () {
        if (this.isRecordingPlay) {
          this.isRecordingPlay = false
          this.innerAudioContext.pause()
        } else {
          this.isRecordingPlay = true
          this.innerAudioContext.play()
        }
      },
      // 合成音频
      syntheticAudio () {
        let testMediaContainer = wx.createMediaContainer()
        testMediaContainer.extractDataSource({
          source: this.recordingAddress, // 录音
          success: recording => {
            testMediaContainer.addTrack(recording.tracks[0])
            console.log(recording, '成功解析第一个音频')
            recording.tracks[0].volume = 1 // 调整音频的音量
            testMediaContainer.extractDataSource({
              source: this.musicUrl, // 音乐
              success: music => {
                testMediaContainer.addTrack(music.tracks[0])
                music.tracks[0].volume = this.setVolume // 调整音频的音量

                testMediaContainer.export({
                  success: res => {
                    console.log(res, '合成音频成功')
                    this.innerAudioContext.src = res.tempFilePath
                    // testMediaContainer.destroy()
                    testMediaContainer.removeTrack(music.tracks[0])
                    testMediaContainer.removeTrack(recording.tracks[0])
                  }
                })
              },
              fail: err => {
                console.log(err, '解析第二个失败')
              }
            })
          },
          fail: err => {
            console.log(err, '解析第一个失败')
          }
        })
      },
      // 设置背景音乐音量
      changeVolume (e) {
        this.setVolume = e.$wx.detail.value / 100
        this.sliderValue = this.setVolume * 100
        this.syntheticAudio()
      }
    },
    onShow () {
      // 页面处于高亮状态
      wx.setKeepScreenOn({
        keepScreenOn: true
      })
    },
    onLoad () {
      this.recorderManager = wx.getRecorderManager()

      this.innerAudioContext = wx.createInnerAudioContext()

      // 监听录音暂停事件
      this.recorderManager.onPause(() => {
        this.isStart = 3
      })

      // 监听录音继续录制
      this.recorderManager.onResume(res => {
        this.isStart = 3
        console.log(res + 'resume')
      })

      // 监听录音结束事件
      this.recorderManager.onStop(res => {
        console.log(res, '录音完成')
        this.isStart = 4
        // this.innerAudioContext.src = res.tempFilePath
        this.recordingAddress = res.tempFilePath
        this.syntheticAudio()
      })

      // 监听录音完成指定帧大小文件事件
      this.recorderManager.onFrameRecorded(res => {
        const { frameBuffer } = res
        console.log('frameBuffer.byteLength', frameBuffer.byteLength)
      })

      this.innerAudioContext.onPlay(() => {
        console.log('播放录音')
      })
    }
  })
</script>

<config>
  {
    navigationBarTitleText: '录音',
    navigationStyle: 'custom',
    usingComponents: {
      head: '~@/components/test-head'
    }
  }
</config>
